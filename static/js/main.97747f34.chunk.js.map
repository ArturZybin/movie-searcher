{"version":3,"sources":["Components/Filter.jsx","Components/SearchBar.jsx","Components/ThemeToggler.jsx","Components/FullMovieInfo.jsx","Components/Movie.jsx","Components/MoviesList.jsx","App.jsx","index.jsx"],"names":["Filter","props","className","isClosed","name","onChange","e","handleTypeChange","target","value","handlePlotChange","handleYearChange","SearchBar","state","isFilterClosed","isCentered","title","type","plot","year","triggerEnterKeySearch","keyCode","handleSearch","setState","this","placeholder","autoFocus","onKeyDown","onClick","data","React","Component","ThemeToggler","handleToggle","defaultChecked","FullMovieInfo","isError","handleCloseButtonClick","ratings","Ratings","map","rating","key","Source","Value","length","Runtime","Plot","Genre","Released","Actors","Director","BoxOffice","Awards","Movie","isFullDataLoaded","fullData","isFullInfoOpened","loadFullData","a","url","createURL","fetch","response","json","API_KEY","imdbID","URL","searchParams","set","openFullInfo","stopPropagation","window","history","pushState","onpopstate","closeFullInfo","Poster","Title","Year","Type","src","alt","PureComponent","MoviesList","useState","loadedMoviesCount","setLoadedMoviesCount","totalMoviesCount","setTotalMoviesCount","loadedMovies","setLoadedMovies","loadedPagesCount","setLoadedPagesCount","setIsError","errorMessage","setErrorMessage","loadNextPage","resetLoaded","nextPageNumber","handleError","Response","Error","Search","totalResults","useEffect","shouldStartNewSearch","handleSearchStart","movieData","index","App","searchData","shouldRenderMoviesList","theme","toggleTheme","event","checked","startSearching","resetStartNewSearch","id","ReactDOM","render","document","getElementById"],"mappings":"sQAyJeA,MArJf,SAAgBC,GACb,OAGG,yBAAKC,UAAWD,EAAME,SAAW,uBAAyB,UACvD,yBAAKD,UAAU,kBACZ,4BAAQE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAOL,EAAMM,iBAAiBD,EAAEE,OAAOC,SAClE,4BAAQA,MAAM,IAAd,yBACA,yCACA,0CACA,6CAIN,yBAAKP,UAAU,kBACZ,4BAAQE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAOL,EAAMS,iBAAiBJ,EAAEE,OAAOC,SAClE,4BAAQA,MAAM,SAAd,mBACA,4BAAQA,MAAM,QAAd,oBAyBN,yBAAKP,UAAU,kBACZ,4BAAQE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAOL,EAAMU,iBAAiBL,EAAEE,OAAOC,SAClE,4BAAQA,MAAM,IAAd,eACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,4CCnEAG,E,2MAlEZC,MAAO,CACJC,gBAAgB,EAChBC,YAAY,EACZC,MAAO,GACPC,KAAM,GACNC,KAAM,QACNC,KAAM,I,EAITC,sBAAwB,SAACd,GACJ,KAAdA,EAAEe,SACN,EAAKC,gB,EAIRA,aAAe,WAAO,IAAD,EAC4B,EAAKT,MAA5CE,EADW,EACXA,WAAYC,EADD,EACCA,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","file":"static/js/main.97747f34.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Filter(props) {\r\n   return (\r\n      // just hardcode all values, don't wanna bother so much about this\r\n      \r\n      <div className={props.isClosed ? 'filter filter_closed' : 'filter'}>\r\n         <div className=\"filter__select\">\r\n            <select name=\"type\" onChange={(e) => props.handleTypeChange(e.target.value)}>\r\n               <option value=\"\">Select what to search</option>\r\n               <option>Movie</option>\r\n               <option>Series</option>\r\n               <option>Episode</option>\r\n            </select>\r\n         </div>\r\n\r\n         <div className=\"filter__select\">\r\n            <select name=\"plot\" onChange={(e) => props.handlePlotChange(e.target.value)}>\r\n               <option value=\"short\">Load short plot</option>\r\n               <option value=\"full\">Load full plot</option>\r\n            </select>\r\n         </div>\r\n\r\n         {/* maybe in future, paid version of api needed */}\r\n         {/* <div className=\"filter__select\">\r\n            <select name=\"genre\" onChange={(e) => props.handleGenreChange(e.target.value)}>\r\n               <option value=\"\">Select genre</option>\r\n               <option>Action</option>\r\n               <option>Adventure</option>\r\n               <option>Animation</option>\r\n               <option>Biography</option>\r\n               <option>Comedy</option>\r\n               <option>Crime</option>\r\n               <option>Documentary</option>\r\n               <option>Drama</option>\r\n               <option>Fantasy</option>\r\n               <option>Horror</option>\r\n               <option>Music</option>\r\n               <option>Sci-Fi</option>\r\n               <option>War</option>\r\n               <option>Western</option>\r\n            </select>\r\n         </div> */}\r\n\r\n         <div className=\"filter__select\">\r\n            <select name=\"year\" onChange={(e) => props.handleYearChange(e.target.value)}>\r\n               <option value=\"\">Select year</option>\r\n               <option>2020</option>\r\n               <option>2019</option>\r\n               <option>2018</option>\r\n               <option>2017</option>\r\n               <option>2016</option>\r\n               <option>2015</option>\r\n               <option>2014</option>\r\n               <option>2013</option>\r\n               <option>2012</option>\r\n               <option>2011</option>\r\n               <option>2010</option>\r\n               <option>2009</option>\r\n               <option>2008</option>\r\n               <option>2007</option>\r\n               <option>2006</option>\r\n               <option>2005</option>\r\n               <option>2004</option>\r\n               <option>2003</option>\r\n               <option>2002</option>\r\n               <option>2001</option>\r\n               <option>2000</option>\r\n               <option>1999</option>\r\n               <option>1998</option>\r\n               <option>1997</option>\r\n               <option>1996</option>\r\n               <option>1995</option>\r\n               <option>1994</option>\r\n               <option>1993</option>\r\n               <option>1992</option>\r\n               <option>1991</option>\r\n               <option>1990</option>\r\n               <option>1989</option>\r\n               <option>1988</option>\r\n               <option>1987</option>\r\n               <option>1986</option>\r\n               <option>1985</option>\r\n               <option>1984</option>\r\n               <option>1983</option>\r\n               <option>1982</option>\r\n               <option>1981</option>\r\n               <option>1980</option>\r\n               <option>1979</option>\r\n               <option>1978</option>\r\n               <option>1977</option>\r\n               <option>1976</option>\r\n               <option>1975</option>\r\n               <option>1974</option>\r\n               <option>1973</option>\r\n               <option>1972</option>\r\n               <option>1971</option>\r\n               <option>1970</option>\r\n               <option>1969</option>\r\n               <option>1968</option>\r\n               <option>1967</option>\r\n               <option>1966</option>\r\n               <option>1965</option>\r\n               <option>1964</option>\r\n               <option>1963</option>\r\n               <option>1962</option>\r\n               <option>1961</option>\r\n               <option>1960</option>\r\n               <option>1959</option>\r\n               <option>1958</option>\r\n               <option>1957</option>\r\n               <option>1956</option>\r\n               <option>1955</option>\r\n               <option>1954</option>\r\n               <option>1953</option>\r\n               <option>1952</option>\r\n               <option>1951</option>\r\n               <option>1950</option>\r\n               <option>1949</option>\r\n               <option>1948</option>\r\n               <option>1947</option>\r\n               <option>1946</option>\r\n               <option>1945</option>\r\n               <option>1944</option>\r\n               <option>1943</option>\r\n               <option>1942</option>\r\n               <option>1941</option>\r\n               <option>1940</option>\r\n               <option>1939</option>\r\n               <option>1938</option>\r\n               <option>1937</option>\r\n               <option>1936</option>\r\n               <option>1935</option>\r\n               <option>1934</option>\r\n               <option>1933</option>\r\n               <option>1932</option>\r\n               <option>1931</option>\r\n               <option>1930</option>\r\n            </select>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nFilter.propTypes = {\r\n   isClosed: PropTypes.bool.isRequired,\r\n   handleTypeChange: PropTypes.func.isRequired,\r\n   handlePlotChange: PropTypes.func.isRequired,\r\n   handleYearChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport Filter from './Filter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n   state= {\r\n      isFilterClosed: true,\r\n      isCentered: true,\r\n      title: '',\r\n      type: '',\r\n      plot: 'short',\r\n      year: ''\r\n   }\r\n\r\n\r\n   triggerEnterKeySearch = (e) => {\r\n      if (e.keyCode !== 13) return;\r\n      this.handleSearch();\r\n   }\r\n\r\n   \r\n   handleSearch = () => {\r\n      const {isCentered, title, type, plot, year} = this.state;\r\n\r\n      if (!title) return;\r\n\r\n      if (isCentered) {\r\n         this.setState({ isCentered: false });\r\n      }\r\n\r\n      this.props.handleSearch({\r\n         title, type, plot, year\r\n      })\r\n   }\r\n\r\n   render() {\r\n      const {isCentered, isFilterClosed} = this.state;\r\n\r\n      return (\r\n         <div className={isCentered ? \"searchbar searchbar_centered\" : \"searchbar\"}>\r\n            <input\r\n               className=\"searchbar__input\"\r\n               type=\"text\"\r\n               placeholder=\"Search movies\"\r\n               autoFocus={true}\r\n               onChange={(e) => this.setState({ title: e.target.value })}\r\n               onKeyDown={this.triggerEnterKeySearch}\r\n            />\r\n            <button\r\n               className=\"searchbar__filter-button searchbar__button\"\r\n               onClick={() => this.setState({ isFilterClosed: !isFilterClosed })}\r\n            />\r\n            <button\r\n               className=\"searchbar__search-button searchbar__button\"\r\n               onClick={this.handleSearch}\r\n            />\r\n            <Filter\r\n               isClosed={isFilterClosed}\r\n               handleTypeChange={(data) => this.setState({ type: data })}\r\n               handlePlotChange={(data) => this.setState({ plot: data })}\r\n               handleYearChange={(data) => this.setState({ year: data })}\r\n            />\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n   handleSearch: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ThemeToggler(props) {\r\n   return (\r\n      <input\r\n         className=\"theme-toggler\"\r\n         type=\"checkbox\"\r\n         onChange={props.handleToggle}\r\n         defaultChecked={true}\r\n      >\r\n      </input>\r\n   )\r\n}\r\n\r\nThemeToggler.propTypes = {\r\n   handleToggle: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ThemeToggler;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction FullMovieInfo(props) {\n   if (props.isError) {\n      return (\n         <>\n            <button\n               className=\"movie__close-full-info-button\"\n               onClick={props.handleCloseButtonClick}\n            >&#10008;</button>\n            <div className=\"error-message error-message_size_small\">Check your connection</div>\n         </>\n      )\n   }\n\n\n   const data = props.data;\n\n   let ratings = data.Ratings.map((rating) => (\n      <span key={rating.Source}>\n         {rating.Source}:{' '}\n         <span className='movie__rating'>{rating.Value}</span>{', '}\n      </span>\n   )\n   )\n   if (!ratings.length) {\n      ratings = 'N/A'\n   };\n\n   return (\n      <>\n         <button\n            className=\"movie__close-full-info-button\"\n            onClick={props.handleCloseButtonClick}\n         >&#10008;</button>\n\n         <div className=\"movie__runtime movie__label\">{data.Runtime}</div>\n         <div className=\"movie__common-info\">\n            <span className=\"movie__common-info-title\">{data.Plot === 'N/A' ? 'Plot: ' : ''}</span>\n            {data.Plot}\n         </div>\n         <div className=\"movie__common-info\">\n            <span className=\"movie__common-info-title\">Genre: </span>\n            {data.Genre}\n         </div>\n         <div className=\"movie__common-info\">\n            <span className=\"movie__common-info-title\">Released: </span>\n            {data.Released}\n         </div>\n         <div className=\"movie__common-info\">\n            <span className=\"movie__common-info-title\">Actors: </span>\n            {data.Actors}\n         </div>\n         <div className=\"movie__common-info\">\n            <span className=\"movie__common-info-title\">Director: </span>\n            {data.Director}\n         </div>\n         <div className=\"movie__common-info\">\n            <span className=\"movie__common-info-title\">Box office: </span>\n            {data.BoxOffice}\n         </div>\n         <div className=\"movie__common-info\">\n            <span className=\"movie__common-info-title\">Awards: </span>\n            {data.Awards}\n         </div>\n         <div className=\"movie__common-info\">\n            <span className=\"movie__common-info-title\">Ratings: </span>\n            {ratings}\n         </div>\n      </>\n   )\n}\n\nFullMovieInfo.propTypes = {\n   isError: PropTypes.bool.isRequired,\n   handleCloseButtonClick: PropTypes.func.isRequired,\n   data: PropTypes.object.isRequired\n}\n\nexport default FullMovieInfo;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FullMovieInfo from './FullMovieInfo';\r\n\r\n\r\nclass Movie extends React.PureComponent {\r\n   state = {\r\n      isFullDataLoaded: false,\r\n      fullData: {},\r\n      isFullInfoOpened: false,\r\n      isError: false\r\n   }\r\n\r\n\r\n   loadFullData = async () => {\r\n      const url = this.createURL();\r\n      let data;\r\n      try {\r\n         const response = await fetch(url);\r\n         data = await response.json();\r\n      } catch {\r\n         this.setState({ isError: true })\r\n         return;\r\n      }\r\n\r\n      if (this.state.isError) this.setState({ isError: false });\r\n      this.setState({\r\n         isFullDataLoaded: true,\r\n         fullData: data\r\n      })\r\n   }\r\n\r\n\r\n   createURL = () => {\r\n      const { API_KEY } = this.props.data;//\r\n      const {imdbID, plot} = this.props.data;\r\n      const url = new URL('https://www.omdbapi.com');\r\n\r\n      url.searchParams.set('apikey', API_KEY);\r\n      url.searchParams.set('i', imdbID);\r\n      url.searchParams.set('plot', plot);\r\n\r\n      return url;\r\n   }\r\n\r\n\r\n   openFullInfo = (e) => {\r\n      // to not trigger outside click that will close full info\r\n      e.stopPropagation();\r\n\r\n      if (this.state.isFullInfoOpened) return;\r\n\r\n      if (!this.state.isFullDataLoaded) {\r\n         this.loadFullData();\r\n      }\r\n      this.setState({ isFullInfoOpened: true });\r\n\r\n      window.history.pushState(null, null, \"?page=movie\")\r\n      window.onpopstate = this.closeFullInfo;\r\n   }\r\n\r\n\r\n   closeFullInfo = () => {\r\n      if (this.state.isFullInfoOpened) {\r\n         this.setState({ isFullInfoOpened: false });\r\n      }\r\n      window.onpopstate = null;\r\n   }\r\n\r\n\r\n\r\n   render() {\r\n      const { Poster, Title, Year, Type } = this.props.data;\r\n      const { isFullInfoOpened, isFullDataLoaded, isError } = this.state;\r\n\r\n      return (\r\n         <div>\r\n            <div className={isFullInfoOpened ? 'movie-locker' : ''} onClick={this.closeFullInfo}>\r\n               <div\r\n                  className={isFullInfoOpened ? 'movie movie_opened' : 'movie'}\r\n                  onClick={this.openFullInfo}\r\n               >\r\n                  {\r\n                     Poster === \"N/A\" ?\r\n                        <div className=\"movie__poster movie__poster-replacer\" />\r\n                        :\r\n                        <img className=\"movie__poster\" src={Poster} alt=\"poster\" />\r\n                  }\r\n                  <h2 className=\"movie__title\">{Title}</h2>\r\n                  <div className=\"movie__year movie__label\">{Year}</div>\r\n                  <div className=\"movie__type movie__label\">{Type}</div>\r\n\r\n                  {\r\n                     (isFullInfoOpened && isFullDataLoaded) || (isFullInfoOpened && isError) ?\r\n                        <FullMovieInfo\r\n                           isError={isError}\r\n                           handleCloseButtonClick={this.closeFullInfo}\r\n                           data={this.state.fullData}\r\n                        />\r\n                        :\r\n                        null\r\n                  }\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nMovie.propTypes = {\r\n   data: PropTypes.shape({\r\n      Poster: PropTypes.string.isRequired,\r\n      Title: PropTypes.string.isRequired,\r\n      Year: PropTypes.string.isRequired,\r\n      Type: PropTypes.string.isRequired,\r\n      imdbID: PropTypes.string.isRequired,\r\n      plot: PropTypes.string.isRequired,\r\n   }).isRequired\r\n}\r\n\r\nexport default Movie;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Movie from './Movie';\r\n\r\n\r\nfunction MoviesList(props) {\r\n   const [loadedMoviesCount, setLoadedMoviesCount] = useState(0);\r\n   const [totalMoviesCount, setTotalMoviesCount] = useState(0);\r\n   const [loadedMovies, setLoadedMovies] = useState([]);\r\n   const [loadedPagesCount, setLoadedPagesCount] = useState(0);\r\n\r\n   const [isError, setIsError] = useState(false);\r\n   const [errorMessage, setErrorMessage] = useState('');\r\n   \r\n   useEffect(() => {\r\n      if (props.shouldStartNewSearch) {\r\n         startNewSearch();\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [props.shouldStartNewSearch])\r\n\r\n\r\n   function startNewSearch() {\r\n      props.handleSearchStart();\r\n      resetState();\r\n      loadNextPage(true);\r\n   }\r\n\r\n\r\n   function resetState() {\r\n      setLoadedMoviesCount(0);\r\n      setTotalMoviesCount(0);\r\n      setLoadedMovies([]);\r\n      setLoadedPagesCount(0);\r\n   }\r\n\r\n\r\n   // state updates asynchronous, so when it is reset\r\n   // this function might use outdated state\r\n   // so it receives parameter that tells whether it needs to use reset state\r\n   async function loadNextPage(resetLoaded) {\r\n      const nextPageNumber = resetLoaded ? 1 : loadedPagesCount + 1;\r\n      const url = createURL(nextPageNumber);\r\n      let data;\r\n\r\n      try {\r\n         const response = await fetch(url);\r\n         data = await response.json();\r\n      } catch (e) {\r\n         handleError('Check your connection');\r\n         return;\r\n      }\r\n\r\n      if (data.Response === 'False') {\r\n         handleError(data.Error);\r\n         return;\r\n      }\r\n\r\n      if (isError) setIsError(false);\r\n\r\n      setLoadedMoviesCount(resetLoaded ? data.Search.length : loadedMoviesCount + data.Search.length);\r\n      if (data.totalResults) setTotalMoviesCount(+data.totalResults);\r\n      setLoadedMovies(resetLoaded ? [...data.Search] : [...loadedMovies, ...data.Search]);\r\n      setLoadedPagesCount(nextPageNumber);\r\n   }\r\n\r\n\r\n   function createURL(nextPageNumber) {\r\n      const { API_KEY, title, type, year } = props.data;\r\n      const url = new URL('https://www.omdbapi.com');\r\n\r\n      url.searchParams.set('apikey', API_KEY);\r\n      url.searchParams.set('s', title);\r\n      if (type) url.searchParams.set('type', type);\r\n      if (year) url.searchParams.set('y', year);\r\n      url.searchParams.set('page', nextPageNumber);\r\n\r\n      return url;\r\n   }\r\n\r\n\r\n   function handleError(errorMessage) {\r\n      setIsError(true);\r\n      if (errorMessage === 'Movie not found!' || errorMessage === 'Check your connection') {\r\n         setErrorMessage(errorMessage)\r\n      } else if (errorMessage === 'Too many results.') {\r\n         setErrorMessage('Too many results, specify your request')\r\n      } else {\r\n         setErrorMessage('Something went wrong...');\r\n      }\r\n   }\r\n\r\n\r\n   function renderMoviesList() {\r\n      return loadedMovies.map((movieData, index) => (\r\n         <Movie\r\n            data={{ ...movieData, plot: props.data.plot, API_KEY: props.data.API_KEY }}\r\n            key={index}\r\n         />\r\n      ))\r\n   }\r\n\r\n\r\n   // returns either 'Show more', or 'That's all', or Loading\r\n   function renderStatus() {\r\n      if (totalMoviesCount === 0) {\r\n         return <div className=\"movies-list__loading\" >  <div></div><div></div><div></div><div></div>  </div>\r\n      }\r\n      if (totalMoviesCount === loadedMoviesCount) {\r\n         return <button className=\"movies-list__movies-end\">That's all</button>\r\n      }\r\n\r\n      return (\r\n         <button\r\n            className=\"movies-list__show-more-button\"\r\n            onClick={() => loadNextPage(false)}\r\n         >Show more</button>\r\n      )\r\n   }\r\n\r\n\r\n   return (\r\n      isError ? \r\n         <div className=\"error-message\">{errorMessage}</div>\r\n         :\r\n         <div className=\"movies-list\">\r\n            <div className=\"movies-list__movies-container\">\r\n               {renderMoviesList()}\r\n            </div>\r\n            {renderStatus()}\r\n         </div>\r\n   )\r\n}\r\n\r\nMoviesList.propTypes = {\r\n   data: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      plot: PropTypes.string.isRequired,\r\n      year: PropTypes.string.isRequired,\r\n      API_KEY: PropTypes.string.isRequired\r\n   }).isRequired,\r\n   shouldStartNewSearch: PropTypes.bool.isRequired,\r\n   handleSearchStart: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MoviesList;","import React from 'react';\r\n\r\nimport SearchBar from './Components/SearchBar';\r\nimport ThemeToggler from './Components/ThemeToggler';\r\nimport MoviesList from './Components/MoviesList';\r\n\r\nimport 'normalize.css';\r\nimport './styles/style.scss';\r\n\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    shouldStartNewSearch: false,\r\n    searchData: {},\r\n    shouldRenderMoviesList: false,\r\n    theme: 'light'\r\n  }\r\n\r\n\r\n  toggleTheme = (event) => {\r\n    const theme = event.target.checked ? 'light' : 'dark';\r\n    this.setState({ theme })\r\n  }\r\n\r\n\r\n  startSearching = (data) => {\r\n    this.setState({\r\n      shouldRenderMoviesList: true,\r\n      shouldStartNewSearch: true,\r\n      searchData: {\r\n        ...data,\r\n        API_KEY: '1ff05d65'\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n  resetStartNewSearch = () => {\r\n    this.setState({ shouldStartNewSearch: false })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { shouldRenderMoviesList, searchData, shouldStartNewSearch } = this.state;\r\n\r\n    return (\r\n      <main id=\"app-root\" className={`theme-${this.state.theme}`} >\r\n        <ThemeToggler handleToggle={this.toggleTheme} />\r\n        <SearchBar handleSearch={this.startSearching}/>\r\n\r\n        {shouldRenderMoviesList &&\r\n        <MoviesList\r\n          data={searchData}\r\n          shouldStartNewSearch={shouldStartNewSearch}\r\n          handleSearchStart={this.resetStartNewSearch}\r\n        />\r\n        }\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}