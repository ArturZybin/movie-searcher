{"version":3,"sources":["Components/Filter.jsx","Components/SearchBar.jsx","Components/ThemeToggler.jsx","Components/Movie.jsx","Components/MoviesList.jsx","App.jsx","index.jsx"],"names":["Filter","props","className","isClosed","name","onChange","e","handleTypeChange","target","value","handleGenreChange","handleYearChange","SearchBar","state","isFilterClosed","isCentered","title","type","genre","year","triggerEnterKeySearch","keyCode","handleSearch","setState","this","placeholder","autoFocus","onKeyDown","onClick","data","React","Component","ThemeToggler","handleToggle","Movie","isFullDataLoaded","fullData","isFullInfoOpened","isError","loadFullData","a","url","createURL","fetch","response","json","API_KEY","id","imdbID","URL","searchParams","set","openFullInfo","stopPropagation","closeFullInfo","renderFullInfo","renderErrorMessage","ratings","Ratings","map","rating","key","Source","Value","length","Runtime","Plot","Genre","Released","Actors","Director","BoxOffice","Awards","Poster","Title","Year","Type","src","alt","PureComponent","MoviesList","useState","loadedMoviesCount","setLoadedMoviesCount","totalMoviesCount","setTotalMoviesCount","loadedMovies","setLoadedMovies","loadedPagesCount","setLoadedPagesCount","setIsError","errorMessage","setErrorMessage","loadNextPage","resetLoaded","nextPageNumber","handleError","Response","Error","Search","totalResults","console","log","useEffect","shouldStartNewSearch","handleSearchStart","movieData","App","searchData","shouldRenderMoviesList","theme","toggleTheme","event","checked","startSearching","ReactDOM","render","document","getElementById"],"mappings":"sQAiJeA,MA7If,SAAgBC,GACb,OAGG,yBAAKC,UAAWD,EAAME,SAAW,uBAAyB,UACvD,yBAAKD,UAAU,kBACZ,4BAAQE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAOL,EAAMM,iBAAiBD,EAAEE,OAAOC,SAClE,4BAAQA,MAAM,IAAd,yBACA,yCACA,0CACA,6CAIN,yBAAKP,UAAU,kBACZ,4BAAQE,KAAK,QAAQC,SAAU,SAACC,GAAD,OAAOL,EAAMS,kBAAkBJ,EAAEE,OAAOC,SACpE,4BAAQA,MAAM,IAAd,gBACA,0CACA,6CACA,6CACA,6CACA,0CACA,yCACA,+CACA,yCACA,2CACA,0CACA,yCACA,0CACA,uCACA,6CAIN,yBAAKP,UAAU,kBACZ,4BAAQE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAOL,EAAMU,iBAAiBL,EAAEE,OAAOC,SAClE,4BAAQA,MAAM,IAAd,eACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,4CC3DAG,E,2MAlEZC,MAAO,CACJC,gBAAgB,EAChBC,YAAY,EACZC,MAAO,KACPC,KAAM,KACNC,MAAO,KACPC,KAAM,M,EAITC,sBAAwB,SAACd,GACJ,KAAdA,EAAEe,SACN,EAAKC,gB,EAIRA,aA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","file":"static/js/main.e41becc2.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Filter(props) {\r\n   return (\r\n      // just hardcode all values, don't wanna bother so much about this\r\n      \r\n      <div className={props.isClosed ? 'filter filter_closed' : 'filter'}>\r\n         <div className=\"filter__select\">\r\n            <select name=\"type\" onChange={(e) => props.handleTypeChange(e.target.value)}>\r\n               <option value=\"\">Select what to search</option>\r\n               <option>Movie</option>\r\n               <option>Series</option>\r\n               <option>Episode</option>\r\n            </select>\r\n         </div>\r\n\r\n         <div className=\"filter__select\">\r\n            <select name=\"genre\" onChange={(e) => props.handleGenreChange(e.target.value)}>\r\n               <option value=\"\">Select genre</option>\r\n               <option>Action</option>\r\n               <option>Adventure</option>\r\n               <option>Animation</option>\r\n               <option>Biography</option>\r\n               <option>Comedy</option>\r\n               <option>Crime</option>\r\n               <option>Documentary</option>\r\n               <option>Drama</option>\r\n               <option>Fantasy</option>\r\n               <option>Horror</option>\r\n               <option>Music</option>\r\n               <option>Sci-Fi</option>\r\n               <option>War</option>\r\n               <option>Western</option>\r\n            </select>\r\n         </div>\r\n\r\n         <div className=\"filter__select\">\r\n            <select name=\"year\" onChange={(e) => props.handleYearChange(e.target.value)}>\r\n               <option value=\"\">Select year</option>\r\n               <option>2020</option>\r\n               <option>2019</option>\r\n               <option>2018</option>\r\n               <option>2017</option>\r\n               <option>2016</option>\r\n               <option>2015</option>\r\n               <option>2014</option>\r\n               <option>2013</option>\r\n               <option>2012</option>\r\n               <option>2011</option>\r\n               <option>2010</option>\r\n               <option>2009</option>\r\n               <option>2008</option>\r\n               <option>2007</option>\r\n               <option>2006</option>\r\n               <option>2005</option>\r\n               <option>2004</option>\r\n               <option>2003</option>\r\n               <option>2002</option>\r\n               <option>2001</option>\r\n               <option>2000</option>\r\n               <option>1999</option>\r\n               <option>1998</option>\r\n               <option>1997</option>\r\n               <option>1996</option>\r\n               <option>1995</option>\r\n               <option>1994</option>\r\n               <option>1993</option>\r\n               <option>1992</option>\r\n               <option>1991</option>\r\n               <option>1990</option>\r\n               <option>1989</option>\r\n               <option>1988</option>\r\n               <option>1987</option>\r\n               <option>1986</option>\r\n               <option>1985</option>\r\n               <option>1984</option>\r\n               <option>1983</option>\r\n               <option>1982</option>\r\n               <option>1981</option>\r\n               <option>1980</option>\r\n               <option>1979</option>\r\n               <option>1978</option>\r\n               <option>1977</option>\r\n               <option>1976</option>\r\n               <option>1975</option>\r\n               <option>1974</option>\r\n               <option>1973</option>\r\n               <option>1972</option>\r\n               <option>1971</option>\r\n               <option>1970</option>\r\n               <option>1969</option>\r\n               <option>1968</option>\r\n               <option>1967</option>\r\n               <option>1966</option>\r\n               <option>1965</option>\r\n               <option>1964</option>\r\n               <option>1963</option>\r\n               <option>1962</option>\r\n               <option>1961</option>\r\n               <option>1960</option>\r\n               <option>1959</option>\r\n               <option>1958</option>\r\n               <option>1957</option>\r\n               <option>1956</option>\r\n               <option>1955</option>\r\n               <option>1954</option>\r\n               <option>1953</option>\r\n               <option>1952</option>\r\n               <option>1951</option>\r\n               <option>1950</option>\r\n               <option>1949</option>\r\n               <option>1948</option>\r\n               <option>1947</option>\r\n               <option>1946</option>\r\n               <option>1945</option>\r\n               <option>1944</option>\r\n               <option>1943</option>\r\n               <option>1942</option>\r\n               <option>1941</option>\r\n               <option>1940</option>\r\n               <option>1939</option>\r\n               <option>1938</option>\r\n               <option>1937</option>\r\n               <option>1936</option>\r\n               <option>1935</option>\r\n               <option>1934</option>\r\n               <option>1933</option>\r\n               <option>1932</option>\r\n               <option>1931</option>\r\n               <option>1930</option>\r\n            </select>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nFilter.propTypes = {\r\n   isClosed: PropTypes.bool.isRequired,\r\n   handleTypeChange: PropTypes.func.isRequired,\r\n   handleGenreChange: PropTypes.func.isRequired,\r\n   handleYearChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport Filter from './Filter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n   state= {\r\n      isFilterClosed: true,\r\n      isCentered: true,\r\n      title: null,\r\n      type: null,\r\n      genre: null,\r\n      year: null\r\n   }\r\n\r\n\r\n   triggerEnterKeySearch = (e) => {\r\n      if (e.keyCode !== 13) return;\r\n      this.handleSearch();\r\n   }\r\n\r\n   \r\n   handleSearch = () => {\r\n      const {isCentered, title, type, genre, year} = this.state;\r\n\r\n      if (!title) return;\r\n\r\n      if (isCentered) {\r\n         this.setState({ isCentered: false });\r\n      }\r\n\r\n      this.props.handleSearch({\r\n         title, type, genre, year\r\n      })\r\n   }\r\n\r\n   render() {\r\n      const {isCentered, isFilterClosed} = this.state;\r\n\r\n      return (\r\n         <div className={isCentered ? \"searchbar searchbar_centered\" : \"searchbar\"}>\r\n            <input\r\n               className=\"searchbar__input\"\r\n               type=\"text\"\r\n               placeholder=\"Search movies\"\r\n               autoFocus={true}\r\n               onChange={(e) => this.setState({ title: e.target.value })}\r\n               onKeyDown={this.triggerEnterKeySearch}\r\n            />\r\n            <button\r\n               className=\"searchbar__filter-button searchbar__button\"\r\n               onClick={() => this.setState({ isFilterClosed: !isFilterClosed })}\r\n            />\r\n            <button\r\n               className=\"searchbar__search-button searchbar__button\"\r\n               onClick={this.handleSearch}\r\n            />\r\n            <Filter\r\n               isClosed={isFilterClosed}\r\n               handleTypeChange={(data) => this.setState({ type: data })}\r\n               handleGenreChange={(data) => this.setState({ genre: data })}\r\n               handleYearChange={(data) => this.setState({ year: data })}\r\n            />\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n   handleSearch: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ThemeToggler(props) {\r\n   return (\r\n      <input\r\n         className=\"theme-toggler\"\r\n         type=\"checkbox\"\r\n         onChange={props.handleToggle}\r\n      >\r\n      </input>\r\n   )\r\n}\r\n\r\nThemeToggler.propTypes = {\r\n   handleToggle: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ThemeToggler;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Movie extends React.PureComponent {\r\n   state = {\r\n      isFullDataLoaded: false,\r\n      fullData: null,\r\n      isFullInfoOpened: false,\r\n      isError: false\r\n   }\r\n\r\n\r\n   loadFullData = async () => {\r\n      const url = this.createURL();\r\n      let data;\r\n      try {\r\n         const response = await fetch(url);\r\n         data = await response.json();\r\n      } catch {\r\n         this.setState({ isError: true })\r\n         return;\r\n      }\r\n\r\n\r\n      if (this.state.isError) this.setState({ isError: false });\r\n      this.setState({\r\n         isFullDataLoaded: true,\r\n         fullData: data\r\n      })\r\n   }\r\n\r\n   createURL = () => {\r\n      const { API_KEY } = this.props.data;//\r\n      const id = this.props.data.imdbID;\r\n      const url = new URL('http://www.omdbapi.com');\r\n\r\n      url.searchParams.set('apikey', API_KEY);\r\n      url.searchParams.set('i', id);\r\n\r\n      return url;\r\n   }\r\n\r\n\r\n   openFullInfo = (e) => {\r\n      // to not trigger outside click that will close full info\r\n      e.stopPropagation();\r\n\r\n      if (this.state.isFullInfoOpened) return;\r\n\r\n      if (!this.state.isFullDataLoaded) {\r\n         this.loadFullData();\r\n      }\r\n      this.setState({ isFullInfoOpened: true });\r\n   }\r\n\r\n   closeFullInfo = () => {\r\n      if (this.state.isFullInfoOpened) {\r\n         this.setState({ isFullInfoOpened: false });\r\n      }\r\n   }\r\n\r\n\r\n   renderFullInfo = () => {\r\n      if (this.state.isError) {\r\n         return this.renderErrorMessage();\r\n      }\r\n\r\n      const { fullData: data } = this.state;\r\n\r\n      let ratings = data.Ratings.map((rating) => (\r\n         <span key={rating.Source}>\r\n            {rating.Source}:{' '}\r\n            <span className='movie__rating'>{rating.Value}</span>{', '}\r\n         </span>\r\n      )\r\n      )\r\n      if (!ratings.length) {\r\n         ratings = 'N/A'\r\n      };\r\n\r\n      return (\r\n         <>\r\n            <button\r\n               className=\"movie__close-full-info-button\"\r\n               onClick={this.closeFullInfo}\r\n            >&#10008;</button>\r\n\r\n            <div className=\"movie__runtime movie__label\">{data.Runtime}</div>\r\n            <div className=\"movie__common-info\">{data.Plot}</div>\r\n            <div className=\"movie__common-info\">\r\n               <span className=\"movie__common-info-title\">Genre: </span>\r\n               {data.Genre}\r\n            </div>\r\n            <div className=\"movie__common-info\">\r\n               <span className=\"movie__common-info-title\">Released: </span>\r\n               {data.Released}\r\n            </div>\r\n            <div className=\"movie__common-info\">\r\n               <span className=\"movie__common-info-title\">Actors: </span>\r\n               {data.Actors}\r\n            </div>\r\n            <div className=\"movie__common-info\">\r\n               <span className=\"movie__common-info-title\">Director: </span>\r\n               {data.Director}\r\n            </div>\r\n            <div className=\"movie__common-info\">\r\n               <span className=\"movie__common-info-title\">Box office: </span>\r\n               {data.BoxOffice}\r\n            </div>\r\n            <div className=\"movie__common-info\">\r\n               <span className=\"movie__common-info-title\">Awards: </span>\r\n               {data.Awards}\r\n            </div>\r\n            <div className=\"movie__common-info\">\r\n               <span className=\"movie__common-info-title\">Ratings: </span>\r\n               {ratings}\r\n            </div>\r\n         </>\r\n      )\r\n   }\r\n\r\n\r\n   renderErrorMessage() {\r\n      return (\r\n         <>\r\n            <button\r\n               className=\"movie__close-full-info-button\"\r\n               onClick={this.closeFullInfo}\r\n            >&#10008;</button>\r\n            <div className=\"error-message error-message_size_small\">Check your connection</div>\r\n         </>\r\n      )\r\n   }\r\n\r\n\r\n   render() {\r\n      const { Poster, Title, Year, Type } = this.props.data;\r\n      const { isFullInfoOpened, isFullDataLoaded, isError } = this.state;\r\n\r\n      return (\r\n         <div>\r\n            <div className={isFullInfoOpened ? 'movie-locker' : ''} onClick={this.closeFullInfo}>\r\n               <div\r\n                  className={isFullInfoOpened ? 'movie movie_opened' : 'movie'}\r\n                  onClick={this.openFullInfo}\r\n               >\r\n                  {\r\n                     Poster === \"N/A\" ?\r\n                        <div className=\"movie__poster movie__poster-replacer\" />\r\n                        :\r\n                        <img className=\"movie__poster\" src={Poster} alt=\"poster\" />\r\n                  }\r\n                  <h2 className=\"movie__title\">{Title}</h2>\r\n                  <div className=\"movie__year movie__label\">{Year}</div>\r\n                  <div className=\"movie__type movie__label\">{Type}</div>\r\n\r\n                  {\r\n                     (isFullInfoOpened && isFullDataLoaded) || (isFullInfoOpened && isError) ?\r\n                        this.renderFullInfo()\r\n                        :\r\n                        null\r\n                  }\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nMovie.propTypes = {\r\n   data: PropTypes.shape({\r\n      Poster: PropTypes.string.isRequired,\r\n      Title: PropTypes.string.isRequired,\r\n      Year: PropTypes.string.isRequired,\r\n      Type: PropTypes.string.isRequired,\r\n      imdbID: PropTypes.string.isRequired\r\n   }).isRequired\r\n}\r\n\r\nexport default Movie;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Movie from './Movie';\r\n\r\n\r\nfunction MoviesList(props) {\r\n   const [loadedMoviesCount, setLoadedMoviesCount] = useState(0);\r\n   const [totalMoviesCount, setTotalMoviesCount] = useState(0);\r\n   const [loadedMovies, setLoadedMovies] = useState([]);\r\n   const [loadedPagesCount, setLoadedPagesCount] = useState(0);\r\n\r\n   const [isError, setIsError] = useState(false);\r\n   const [errorMessage, setErrorMessage] = useState('');\r\n\r\n   useEffect(() => {\r\n      if (props.shouldStartNewSearch) {\r\n         startNewSearch();\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [props.shouldStartNewSearch])\r\n\r\n\r\n   function startNewSearch() {\r\n      props.handleSearchStart();\r\n      resetState();\r\n      loadNextPage(true);\r\n   }\r\n\r\n\r\n   function resetState() {\r\n      setLoadedMoviesCount(0);\r\n      setTotalMoviesCount(0);\r\n      setLoadedMovies([]);\r\n      setLoadedPagesCount(0);\r\n   }\r\n\r\n\r\n   // state updates asynchronous, so when it is reset\r\n   // this function might use not current state\r\n   // so it receives parameter that tells whether it needs to use reset state\r\n   async function loadNextPage(resetLoaded) {\r\n      const nextPageNumber = resetLoaded ? 1 : loadedPagesCount + 1;\r\n\r\n      const url = createURL(nextPageNumber);\r\n      let data;\r\n      try{\r\n         const response = await fetch(url);\r\n         data = await response.json();\r\n      } catch(e) {\r\n         handleError('Check your connection');\r\n         return;\r\n      }\r\n      if (data.Response === 'False') {\r\n         handleError(data.Error);\r\n         return;\r\n      }\r\n      \r\n      if (isError) setIsError(false);\r\n      setLoadedMoviesCount(resetLoaded ? data.Search.length : loadedMoviesCount + data.Search.length);\r\n      if (data.totalResults) setTotalMoviesCount(+data.totalResults);\r\n      setLoadedMovies(resetLoaded ? [...data.Search] : [...loadedMovies, ...data.Search]);\r\n      setLoadedPagesCount(nextPageNumber);\r\n   }\r\n\r\n\r\n   function createURL(nextPageNumber) {\r\n      const {API_KEY, title, type, year} = props.data;\r\n      const url = new URL('http://www.omdbapi.com');\r\n\r\n      url.searchParams.set('apikey', API_KEY);\r\n      url.searchParams.set('s', title);\r\n      if (type) url.searchParams.set('type', type);\r\n      if (year) url.searchParams.set('y', year);\r\n      url.searchParams.set('page', nextPageNumber);\r\n\r\n      return url;\r\n   }\r\n\r\n\r\n   function handleError(errorMessage) {\r\n      setIsError(true);\r\n      if (errorMessage === 'Movie not found!' || errorMessage === 'Check your connection') {\r\n         setErrorMessage(errorMessage)\r\n      } else if (errorMessage === 'Too many results.') {\r\n         setErrorMessage('Too many results, your request must be more specific')\r\n      } else {\r\n         console.log(errorMessage)\r\n         setErrorMessage('Something went wrong...');\r\n      }\r\n   }\r\n\r\n\r\n   function renderMoviesList() {\r\n      return loadedMovies.map((movieData) => <Movie data={{...movieData, API_KEY: props.data.API_KEY}} key={movieData.imdbID} />)\r\n   }\r\n\r\n\r\n   return (\r\n      isError ? \r\n      <div className=\"error-message\">{errorMessage}</div> \r\n      :\r\n      <div className=\"movies-list\">\r\n         <div className=\"movies-list__movies-container\">\r\n            {renderMoviesList()}\r\n         </div>\r\n         {\r\n            totalMoviesCount === loadedMoviesCount ? \r\n            <button className=\"movies-list__movies-over\">That's all</button> \r\n            :\r\n            <button\r\n               className=\"movies-list__show-more-button\"\r\n               onClick={() => loadNextPage(false)}\r\n            >Show more</button>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nMoviesList.propTypes = {\r\n   data: PropTypes.object.isRequired,\r\n   shouldStartNewSearch: PropTypes.bool.isRequired,\r\n   handleSearchStart: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MoviesList;","import React from 'react';\r\n\r\nimport SearchBar from './Components/SearchBar';\r\nimport ThemeToggler from './Components/ThemeToggler';\r\nimport MoviesList from './Components/MoviesList';\r\n\r\nimport 'normalize.css';\r\nimport './styles/style.scss';\r\n\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    shouldStartNewSearch: false,\r\n    searchData: {},\r\n    shouldRenderMoviesList: false,\r\n    theme: 'dark'\r\n  }\r\n\r\n\r\n  toggleTheme = (event) => {\r\n    const theme = event.target.checked ? 'light' : 'dark';\r\n    this.setState({ theme })\r\n  }\r\n\r\n\r\n  startSearching = (data) => {\r\n    this.setState({\r\n      shouldStartNewSearch: true,\r\n      searchData: {\r\n        ...data,\r\n        API_KEY: '1ff05d65'\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { shouldRenderMoviesList, searchData, shouldStartNewSearch } = this.state;\r\n\r\n    return (\r\n      <main id=\"app-root\" className={`theme-${this.state.theme}`} >\r\n        <ThemeToggler handleToggle={this.toggleTheme} />\r\n        <SearchBar handleSearch={(data) => {\r\n          this.startSearching(data);\r\n          this.setState({ shouldRenderMoviesList: true })\r\n        }}/>\r\n\r\n        {shouldRenderMoviesList &&\r\n        <MoviesList\r\n          data={searchData}\r\n          shouldStartNewSearch={shouldStartNewSearch}\r\n          handleSearchStart={ () => this.setState({ shouldStartNewSearch: false }) }\r\n        />\r\n        }\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}